#####################################################

# Get the lookup tables for popularity 

#install.packages("stringr")
#install.packages("splitstackshape")
#install.packages("reshape2")
#install.packages("dplyr")
library(stringr)
library(splitstackshape)
library(reshape2)
library(dplyr)


rottom <- read.csv("test_2018-04-23_19-52-54.txt", sep = "\t", stringsAsFactors = FALSE)

#str(rottom)
rottom$Audience_Score <- as.integer(rottom$Audience_Score)
rottom$Critics_Score <- as.integer(rottom$Critics_Score)


rottom$Yr <- str_sub(rottom$In_Theaters_date, -2, -1)
rt <- rottom[rottom$Yr != "ne", ]
rt$Year<- ifelse(as.integer(rt$Yr) <= 18, paste0("20",rt$Yr), paste0("19", rt$Yr))
rt$ReleaseDate <- paste(str_sub(rt$In_Theaters_date, 1, -4), rt$Year, sep = "-")

rt$ReleaseDate <- strptime(rt$ReleaseDate, format = "%d-%b-%Y")

rt2 <- rt[!is.na(rt$Audience_Score), ]


#Creating copies of the main dataset
cast_pop <- rt2[, c(1, 15, 2, 3, 21, 22)]
cast_pop$ReleaseDate <- as.character(cast_pop$ReleaseDate)


#Reshape the dataframe
temp1 <- cSplit(cast_pop, 'Cast', sep=",", type.convert=FALSE)
temp2 <- melt(temp1, variable.name = "Cast", id.vars = c("Movie_name", "Critics_Score", "Audience_Score", "Year", "ReleaseDate"))
temp3 <- temp2[!is.na(temp2$value), ]

castmem <- temp3[, -6]
castmem$Year <- as.integer(castmem$Year)

names(castmem) <- c("Movie", "Critics_Score", "Audience_Score", "Year", "ReleaseDate", "Actor")


#Calculations
Cast_Popularity <- castmem %>% arrange(Actor, Year) %>% mutate(Avg = cummean(Audience_Score)) %>% select(Actor, Year, Avg) %>% group_by(Actor, Year) %>% summarise(AvgValue = last(Avg), movies = length(Avg))

